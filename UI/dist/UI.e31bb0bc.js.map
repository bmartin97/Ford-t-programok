{"version":3,"sources":["index.js"],"names":["state","roles","roles_table","document","querySelector","start_btn","input_func","addEventListener","evt","input_function","value","replace","split","console","log","input","output","rules","index","getRuleCellIndex","getNextChar","rule","getRule","text","length","x","y","x_headers","querySelectorAll","x_index","findIndex","head","innerHTML","y_headers","y_index","rule_number"],"mappings":"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","file":"UI.e31bb0bc.js","sourceRoot":"..","sourcesContent":["let state = {\r\n    roles: [],\r\n}\r\n\r\nconst roles_table = document.querySelector(\"#roles-table\");\r\nconst start_btn = document.querySelector(\"#start-btn\");\r\nconst input_func = document.querySelector(\"#input-function\");\r\n\r\nstart_btn.addEventListener('click', function(evt) {\r\n    let input_function = input_func.value;\r\n    input_function = input_function.replace('(','').replace(')','');\r\n    input_function = input_function.split(',');\r\n    console.log(input_function);\r\n\r\n    let input = input_function[0];\r\n    let output = input_function[1];\r\n    let rules = input_function[2];\r\n\r\n\r\n    let index = getRuleCellIndex(getNextChar(input), getNextChar(output));\r\n    let rule = getRule(index);\r\n    console.log(rule);\r\n});\r\n\r\nconsole.log(getRule(getRuleCellIndex(\"+\", \"E'\")));\r\n\r\nfunction getNextChar(text) {\r\n    if(text.length > 2 && text[1] === \"'\") {\r\n        return text[0] + text[1];\r\n    } else {\r\n        return text[0];\r\n    }\r\n}\r\n\r\nfunction getRuleCellIndex(x, y) {\r\n    const x_headers = roles_table.querySelectorAll(\"thead > tr > th\");\r\n    const x_index = [...x_headers].findIndex(head => head.innerHTML === x);\r\n    if(x_index === -1) {\r\n        throw \"not found x value\";\r\n    }\r\n    const y_headers = roles_table.querySelectorAll(\"tbody > tr > td:first-child\");\r\n    const y_index = [...y_headers].findIndex(head => head.innerHTML === y);\r\n    if(y_index === -1) {\r\n        throw \"not found y value\";\r\n    }\r\n\r\n    return { x: x_index + 1, y: y_index + 1};\r\n}\r\n\r\nfunction getRule({x, y}) {\r\n    let rule = roles_table.querySelector(`tbody tr:nth-child(${y}) > td:nth-child(${x}) input`).value;\r\n    if(rule !== \"\") {\r\n        rule = rule.split(',');\r\n        return {\r\n            rule: rule[0].replace('(',''),\r\n            rule_number: rule[1].replace(')','')\r\n        }\r\n    } else {\r\n        throw \"empty rule cell\"\r\n    }\r\n    \r\n}"]}